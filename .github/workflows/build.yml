name: Build & Test

on:
  push:
    branches:
      - develop
      - main
  pull_request:

jobs:
  phylum_analyze:
    if: ${{ github.event.pull_request }}
    uses: radixdlt/public-iac-resuable-artifacts/.github/workflows/phylum-analyze.yml@main
    permissions:
      id-token: write
      pull-requests: write
      contents: read
    secrets:
      phylum_api_key: ${{ secrets.PHYLUM_API_KEY }}

  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    steps:
      - uses: RDXWorks-actions/checkout@main
      - name: Use Node.js
        uses: RDXWorks-actions/setup-node@main
        with:
          node-version: '18.17.0'

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        env:
          VITE_GITHUB_REF_NAME: ${{ github.ref_name }}
        run: npm run build

      - uses: RDXWorks-actions/upload-artifact@main
        with:
          name: connector-extension.${{ github.sha }}
          path: dist/

      - name: Build extension with dev tools
        run: npm run build
        env:
          VITE_DEV_TOOLS: true
          VITE_GITHUB_REF_NAME: ${{ github.ref_name }}

      - uses: RDXWorks-actions/upload-artifact@main
        with:
          name: connector-extension-with-dev-tools.${{ github.sha }}
          path: dist/

      - name: Running lint
        run: npm run lint

      - name: Running unit tests
        run: npm run test:ci

      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: 'arn:aws:iam::${{ secrets.SECRETS_ACCOUNT_ID }}:role/gh-common-secrets-read-access'
          app_name: 'conn-extension'
          step_name: 'sonar'
          secret_prefix: 'GH'
          secret_name: 'arn:aws:secretsmanager:eu-west-2:${{ secrets.SECRETS_ACCOUNT_ID }}:secret:github-actions/common/sonar-token-CgrUGD'
          parse_json: true

      - name: SonarCloud Scan
        uses: RDXWorks-actions/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ env.GH_SONAR_TOKEN }}
